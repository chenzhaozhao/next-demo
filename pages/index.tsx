import { useState } from "react";
import Head from "next/head";
import Img from "next/image";
import styles from "../styles/Home.module.css";
import { Input, Dropdown, Menu, Modal, Row, Col, Image } from "antd";
import { useRouter } from "next/router";
import {
  SearchOutlined,
  AudioOutlined,
  MoreOutlined,
  PlusOutlined,
} from "@ant-design/icons";
export default function Home(props: any) {
  const [ways, setWays] = useState(props.way);
  const [visible, setVisible] = useState(false);
  const [action, setAction] = useState("");
  const [postData, setPostData] = useState({
    name: "",
    url: "",
    id: "",
  });
  const router = useRouter();
  const menu = (record: any) => (
    <Menu
      onClick={(e) => {
        const { key, domEvent } = e;
        domEvent.stopPropagation();
        setAction(key);
        if (key === "REMOVE") {
          task({ id: record.id });
        } else {
          setVisible(true);
          setPostData({ url: record.url, name: record.name, id: record.id });
        }
      }}
    >
      <Menu.Item key="EDIT">修改快捷方式</Menu.Item>
      <Menu.Item key="REMOVE">移除</Menu.Item>
    </Menu>
  );
  const task = async (data: any) => {
    const URL = "http://localhost:3000/api/way";
    let res = null;
    const { url, name, id } = postData;
    switch (action) {
      case "ADD":
        res = await fetch(URL, {
          method: "POST",
          body: JSON.stringify({ url, name }),
        });
        break;
      case "EDIT":
        res = await fetch(URL, {
          method: "PUT",
          body: JSON.stringify({ url, name, id }),
        });
        break;
      case "REMOVE":
        res = await fetch(URL, {
          method: "DELETE",
          body: JSON.stringify(data),
        });
        break;
      default:
        return null;
    }
    const result = await res.json();
    setVisible(false);
    return setWays(result);
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>新标签页</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://www.google.com/favicon.ico" />
      </Head>
      <div className={styles.margin_top_20}>
        <div className={styles.image_center}>
          <Img src="/google_logo.svg" alt="" width={272} height={92} />
        </div>
        <div>
          <Input
            placeholder="在Google上搜锁，或者输入一个网址"
            prefix={<SearchOutlined />}
            suffix={<AudioOutlined />}
            className={styles.search_input}
          />
        </div>
        <div className={styles.ways}>
          {ways.map((item: any, index: number) => {
            return (
              <div
                key={index}
                className={styles.way + " " + styles.pointer}
                onMouseOver={() => {
                  setWays(
                    ways.map((way: any) =>
                      way.id === item.id ? { ...item, show: true } : { ...way }
                    )
                  );
                }}
                onMouseOut={() => {
                  setWays(
                    ways.map((way: any) =>
                      way.id === item.id ? { ...item, show: false } : { ...way }
                    )
                  );
                }}
                onClick={() => {
                  router.replace(`http://${item.url}`);
                }}
              >
                {item.show && (
                  <div className={styles.more}>
                    <Dropdown overlay={() => menu(item)} placement="bottomLeft">
                      <MoreOutlined />
                    </Dropdown>
                  </div>
                )}
                <div className={styles.center}>
                  <Image
                    width={24}
                    height={24}
                    alt=""
                    src={`https://${item.url}/favicon.ico`}
                    preview={false}
                  />
                </div>
                <div>{item.name}</div>
              </div>
            );
          })}
          {ways.length !== 10 && (
            <div
              className={styles.way + " " + styles.pointer}
              onMouseEnter={() => {}}
              onMouseLeave={() => {}}
              onClick={() => {
                setAction("ADD");
                setVisible(true);
                setPostData({ url: "", name: "", id: "" });
              }}
            >
              <div className={styles.center}>
                <PlusOutlined />
              </div>
              <div>添加快捷方式</div>
            </div>
          )}
        </div>
        <Modal
          title={`${action === "ADD" ? "添加" : "修改"}快捷方式`}
          visible={visible}
          closable={false}
          okText="完成"
          cancelText="取消"
          destroyOnClose
          onCancel={() => setVisible(false)}
          onOk={() => {
            task({});
          }}
        >
          <Row gutter={[24, 6]}>
            <Col span={24}>名称</Col>
            <Col span={24}>
              <Input
                value={postData.name}
                onChange={(e) => {
                  setPostData({ ...postData, name: e.target.value });
                }}
              />
            </Col>
            <Col span={24}>网址</Col>
            <Col span={24}>
              <Input
                value={postData.url}
                onChange={(e) => {
                  setPostData({ ...postData, url: e.target.value });
                }}
              />
            </Col>
          </Row>
        </Modal>
      </div>
      <style jsx>{``}</style>
    </div>
  );
}

export async function getServerSideProps(context: any) {
  console.log(context);
  const res = await fetch("http://localhost:3000/api/way");
  let ways = await res.json();
  return {
    props: {
      way: ways.map((item: any) => ({ ...item, show: false })),
    },
  };
}
